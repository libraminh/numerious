"use client";

import { useState } from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";

import { Separator } from "@/components/ui/separator";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { calculateLifePathNumber, findCompatibleNames } from "@/lib/numerology";
import { numberMeanings } from "@/data/numerology-data";
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";

export default function NameFinderPage() {
  const [birthDate, setBirthDate] = useState("");
  const [gender, setGender] = useState<"male" | "female">("male");
  const [lifePathNumber, setLifePathNumber] = useState(0);
  const [suggestedNames, setSuggestedNames] = useState<string[]>([]);
  const [isCalculating, setIsCalculating] = useState(false);

  const handleCalculateLifePath = () => {
    if (!birthDate) return;

    try {
      const date = new Date(birthDate);
      const number = calculateLifePathNumber(date);
      setLifePathNumber(number);
    } catch (error) {
      console.error("L·ªói t√≠nh to√°n:", error);
    }
  };

  const handleFindNames = () => {
    if (lifePathNumber === 0) return;

    setIsCalculating(true);

    try {
      const names = findCompatibleNames(lifePathNumber, gender);
      setSuggestedNames(names);
    } catch (error) {
      console.error("L·ªói t√¨m t√™n:", error);
    } finally {
      setIsCalculating(false);
    }
  };

  const getNumberMeaning = (number: number) => {
    return numberMeanings.find((m) => m.number === number);
  };

  const getGenderText = (gender: "male" | "female") => {
    return gender === "male" ? "Nam" : "N·ªØ";
  };

  const getGenderEmoji = (gender: "male" | "female") => {
    return gender === "male" ? "üë®" : "üë©";
  };

  return (
    <div className="min-h-screen bg-background">
      <Header />
      <main className="py-8">
        <div className="max-w-4xl mx-auto p-6 space-y-8">
          <div className="text-center space-y-4">
            <h1 className="text-4xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
              T√¨m T√™n Ph√π H·ª£p
            </h1>
            <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
              Kh√°m ph√° nh·ªØng t√™n ph√π h·ª£p v·ªõi s·ªë ch·ªß ƒë·∫°o c·ªßa b·∫°n. T√™n ph√π h·ª£p s·∫Ω
              gi√∫p tƒÉng c∆∞·ªùng nƒÉng l∆∞·ª£ng t√≠ch c·ª±c v√† h·ªó tr·ª£ b·∫°n trong cu·ªôc s·ªëng.
            </p>
          </div>

          {/* Form nh·∫≠p th√¥ng tin */}
          <Card>
            <CardHeader>
              <CardTitle>Th√¥ng tin c∆° b·∫£n</CardTitle>
              <CardDescription>
                Nh·∫≠p ng√†y sinh v√† ch·ªçn gi·ªõi t√≠nh ƒë·ªÉ t√¨m t√™n ph√π h·ª£p
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div className="space-y-2">
                  <Label htmlFor="birthDate">Ng√†y sinh</Label>
                  <Input
                    id="birthDate"
                    type="date"
                    value={birthDate}
                    onChange={(e) => setBirthDate(e.target.value)}
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="gender">Gi·ªõi t√≠nh</Label>
                  <Select
                    value={gender}
                    onValueChange={(value: "male" | "female") =>
                      setGender(value)
                    }
                  >
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="male">üë® Nam</SelectItem>
                      <SelectItem value="female">üë© N·ªØ</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>

              <Button
                onClick={handleCalculateLifePath}
                disabled={!birthDate}
                className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700"
              >
                üßÆ T√≠nh s·ªë ch·ªß ƒë·∫°o
              </Button>
            </CardContent>
          </Card>

          {/* Hi·ªÉn th·ªã s·ªë ch·ªß ƒë·∫°o */}
          {lifePathNumber > 0 && (
            <Card className="bg-gradient-to-r from-purple-50 to-pink-50">
              <CardHeader className="text-center">
                <CardTitle className="text-2xl">S·ªë ch·ªß ƒë·∫°o c·ªßa b·∫°n</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="text-center space-y-4">
                  <div className="w-24 h-24 mx-auto bg-gradient-to-r from-purple-600 to-pink-600 rounded-full flex items-center justify-center text-4xl font-bold text-white">
                    {lifePathNumber}
                  </div>
                  <div>
                    <h3 className="text-xl font-semibold text-purple-600">
                      {getNumberMeaning(lifePathNumber)?.title}
                    </h3>
                    <p className="text-muted-foreground mt-2">
                      {getNumberMeaning(lifePathNumber)?.description}
                    </p>
                  </div>

                  <Button
                    onClick={handleFindNames}
                    disabled={isCalculating}
                    size="lg"
                    className="bg-gradient-to-r from-green-600 to-emerald-600 hover:from-green-700 hover:to-emerald-700"
                  >
                    {isCalculating ? "ƒêang t√¨m ki·∫øm..." : "‚ú® T√¨m t√™n ph√π h·ª£p"}
                  </Button>
                </div>
              </CardContent>
            </Card>
          )}

          {/* K·∫øt qu·∫£ t√¨m t√™n */}
          {suggestedNames.length > 0 && (
            <Card className="bg-gradient-to-r from-green-50 to-emerald-50">
              <CardHeader className="text-center">
                <CardTitle className="text-2xl text-green-600">
                  T√™n ph√π h·ª£p cho {getGenderText(gender)} - S·ªë {lifePathNumber}
                </CardTitle>
                <CardDescription>
                  Nh·ªØng t√™n n√†y s·∫Ω tƒÉng c∆∞·ªùng nƒÉng l∆∞·ª£ng t√≠ch c·ª±c c·ªßa s·ªë ch·ªß ƒë·∫°o{" "}
                  {lifePathNumber}
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-6">
                  {/* Danh s√°ch t√™n */}
                  <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
                    {suggestedNames.map((name, index) => (
                      <div
                        key={index}
                        className="text-center p-4 bg-white rounded-lg border-2 border-green-200 hover:border-green-400 transition-colors"
                      >
                        <div className="text-2xl mb-2">
                          {getGenderEmoji(gender)}
                        </div>
                        <div className="text-lg font-semibold text-green-700">
                          {name}
                        </div>
                        <div className="text-xs text-muted-foreground">
                          T√™n ph√π h·ª£p
                        </div>
                      </div>
                    ))}
                  </div>

                  <Separator />

                  {/* Gi·∫£i th√≠ch */}
                  <div className="bg-white p-6 rounded-lg">
                    <h4 className="font-semibold text-lg mb-3 text-center text-green-600">
                      üí° T·∫°i sao nh·ªØng t√™n n√†y ph√π h·ª£p?
                    </h4>
                    <div className="space-y-3 text-sm text-muted-foreground">
                      <p>
                        <strong>S·ªë ch·ªß ƒë·∫°o {lifePathNumber}</strong> ƒë·∫°i di·ªán
                        cho{" "}
                        {getNumberMeaning(lifePathNumber)
                          ?.keywords.join(", ")
                          .toLowerCase()}
                        . Nh·ªØng t√™n ƒë∆∞·ª£c g·ª£i √Ω s·∫Ω:
                      </p>
                      <ul className="space-y-2 ml-4">
                        <li>‚Ä¢ TƒÉng c∆∞·ªùng nƒÉng l∆∞·ª£ng t√≠ch c·ª±c c·ªßa s·ªë ch·ªß ƒë·∫°o</li>
                        <li>‚Ä¢ H·ªó tr·ª£ ph√°t tri·ªÉn t√≠nh c√°ch v√† t√†i nƒÉng</li>
                        <li>‚Ä¢ T·∫°o s·ª± c√¢n b·∫±ng v√† h√†i h√≤a trong cu·ªôc s·ªëng</li>
                        <li>‚Ä¢ Gi√∫p b·∫°n d·ªÖ d√†ng ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u</li>
                      </ul>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
          )}

          {/* Th√¥ng tin b·ªï sung */}
          <Card className="bg-gradient-to-r from-blue-50 to-cyan-50">
            <CardHeader>
              <CardTitle className="text-center text-blue-600">
                üìö V·ªÅ t√™n v√† s·ªë ch·ªß ƒë·∫°o
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-semibold text-blue-700 mb-2">
                    T√™n ·∫£nh h∆∞·ªüng nh∆∞ th·∫ø n√†o?
                  </h4>
                  <p className="text-sm text-blue-600">
                    T√™n c·ªßa b·∫°n c√≥ ·∫£nh h∆∞·ªüng ƒë·∫øn nƒÉng l∆∞·ª£ng v√† t√≠nh c√°ch. T√™n
                    ph√π h·ª£p v·ªõi s·ªë ch·ªß ƒë·∫°o s·∫Ω tƒÉng c∆∞·ªùng nh·ªØng ph·∫©m ch·∫•t t√≠ch
                    c·ª±c v√† gi√∫p b·∫°n ph√°t tri·ªÉn t·ªët h∆°n.
                  </p>
                </div>
                <div>
                  <h4 className="font-semibold text-blue-700 mb-2">
                    C√°ch ch·ªçn t√™n ph√π h·ª£p:
                  </h4>
                  <p className="text-sm text-blue-600">
                    T√™n ph√π h·ª£p th∆∞·ªùng c√≥ s·ªë linh h·ªìn ho·∫∑c s·ªë bi·ªÉu ƒë·∫°t t∆∞∆°ng
                    th√≠ch v·ªõi s·ªë ch·ªß ƒë·∫°o. ƒêi·ªÅu n√†y t·∫°o ra s·ª± h√†i h√≤a v√† c√¢n b·∫±ng
                    trong cu·ªôc s·ªëng c·ªßa b·∫°n.
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* L∆∞u √Ω */}
          <Card className="bg-gradient-to-r from-orange-50 to-yellow-50">
            <CardHeader>
              <CardTitle className="text-center text-orange-600">
                ‚ö†Ô∏è L∆∞u √Ω quan tr·ªçng
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="space-y-3 text-sm text-orange-700">
                <p>
                  ‚Ä¢ K·∫øt qu·∫£ n√†y ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o, kh√¥ng n√™n thay ƒë·ªïi
                  t√™n m·ªôt c√°ch v·ªôi v√†ng
                </p>
                <p>
                  ‚Ä¢ T√™n hi·ªán t·∫°i c·ªßa b·∫°n v·∫´n c√≥ th·ªÉ ph√π h·ª£p n·∫øu b·∫°n c·∫£m th·∫•y h√†i
                  l√≤ng v·ªõi n√≥
                </p>
                <p>
                  ‚Ä¢ Vi·ªác thay ƒë·ªïi t√™n n√™n ƒë∆∞·ª£c c√¢n nh·∫Øc k·ªπ l∆∞·ª°ng v√† c√≥ th·ªÉ tham
                  kh·∫£o √Ω ki·∫øn chuy√™n gia
                </p>
                <p>
                  ‚Ä¢ Quan tr·ªçng nh·∫•t v·∫´n l√† s·ª± n·ªó l·ª±c v√† ph√°t tri·ªÉn b·∫£n th√¢n c·ªßa
                  b·∫°n
                </p>
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
      <Footer />
    </div>
  );
}

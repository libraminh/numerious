"use client";

import { useState } from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";

import {
  calculateLifePathNumber,
  calculateCompatibility,
} from "@/lib/numerology";
import { numberMeanings, compatibilityMatrix } from "@/data/numerology-data";
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";

export default function CompatibilityPage() {
  const [person1, setPerson1] = useState({
    name: "",
    birthDate: "",
    lifePathNumber: 0,
  });
  const [person2, setPerson2] = useState({
    name: "",
    birthDate: "",
    lifePathNumber: 0,
  });
  const [compatibility, setCompatibility] = useState<{
    level: string;
    person1Number: number;
    person2Number: number;
    matrixInfo: {
      best: number[];
      good: number[];
      challenging: number[];
    };
  } | null>(null);
  const [isCalculating, setIsCalculating] = useState(false);

  const handleCalculatePerson1 = () => {
    if (!person1.name || !person1.birthDate) return;

    try {
      const date = new Date(person1.birthDate);
      const lifePathNumber = calculateLifePathNumber(date);
      setPerson1((prev) => ({ ...prev, lifePathNumber }));
    } catch (error) {
      console.error("L·ªói t√≠nh to√°n:", error);
    }
  };

  const handleCalculatePerson2 = () => {
    if (!person2.name || !person1.birthDate) return;

    try {
      const date = new Date(person2.birthDate);
      const lifePathNumber = calculateLifePathNumber(date);
      setPerson2((prev) => ({ ...prev, lifePathNumber }));
    } catch (error) {
      console.error("L·ªói t√≠nh to√°n:", error);
    }
  };

  const handleCalculateCompatibility = () => {
    if (person1.lifePathNumber === 0 || person2.lifePathNumber === 0) return;

    setIsCalculating(true);

    try {
      const compatibilityLevel = calculateCompatibility(
        person1.lifePathNumber,
        person2.lifePathNumber
      );
      const matrixInfo =
        compatibilityMatrix[
          person1.lifePathNumber as keyof typeof compatibilityMatrix
        ];

      setCompatibility({
        level: compatibilityLevel,
        person1Number: person1.lifePathNumber,
        person2Number: person2.lifePathNumber,
        matrixInfo,
      });
    } catch (error) {
      console.error("L·ªói t√≠nh to√°n:", error);
    } finally {
      setIsCalculating(false);
    }
  };

  const getCompatibilityColor = (level: string) => {
    switch (level) {
      case "best":
        return "text-green-600 bg-green-100";
      case "good":
        return "text-blue-600 bg-blue-100";
      case "challenging":
        return "text-orange-600 bg-orange-100";
      default:
        return "text-gray-600 bg-gray-100";
    }
  };

  const getCompatibilityText = (level: string) => {
    switch (level) {
      case "best":
        return "R·∫•t t∆∞∆°ng th√≠ch";
      case "good":
        return "T∆∞∆°ng th√≠ch t·ªët";
      case "challenging":
        return "C·∫ßn c·ªë g·∫Øng";
      default:
        return "Kh√¥ng x√°c ƒë·ªãnh";
    }
  };

  const getNumberMeaning = (number: number) => {
    return numberMeanings.find((m) => m.number === number);
  };

  return (
    <div className="min-h-screen bg-background">
      <Header />
      <main className="py-8">
        <div className="max-w-6xl mx-auto p-6 space-y-8">
          <div className="text-center space-y-4">
            <h1 className="text-4xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
              Ki·ªÉm Tra T∆∞∆°ng Th√≠ch S·ªë H·ªçc
            </h1>
            <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
              Kh√°m ph√° m·ª©c ƒë·ªô t∆∞∆°ng th√≠ch gi·ªØa hai ng∆∞·ªùi d·ª±a tr√™n s·ªë ch·ªß ƒë·∫°o c·ªßa
              h·ªç. Hi·ªÉu r√µ h∆°n v·ªÅ m·ªëi quan h·ªá v√† c√°ch c·∫£i thi·ªán s·ª± h√≤a h·ª£p.
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* Ng∆∞·ªùi th·ª© nh·∫•t */}
            <Card>
              <CardHeader>
                <CardTitle className="text-center text-purple-600">
                  Ng∆∞·ªùi th·ª© nh·∫•t
                </CardTitle>
                <CardDescription>
                  Nh·∫≠p th√¥ng tin ƒë·ªÉ t√≠nh s·ªë ch·ªß ƒë·∫°o
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="person1Name">H·ªç v√† t√™n</Label>
                  <Input
                    id="person1Name"
                    placeholder="V√≠ d·ª•: Nguy·ªÖn VƒÉn An"
                    value={person1.name}
                    onChange={(e) =>
                      setPerson1((prev) => ({ ...prev, name: e.target.value }))
                    }
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="person1BirthDate">Ng√†y sinh</Label>
                  <Input
                    id="person1BirthDate"
                    type="date"
                    value={person1.birthDate}
                    onChange={(e) =>
                      setPerson1((prev) => ({
                        ...prev,
                        birthDate: e.target.value,
                      }))
                    }
                  />
                </div>

                <Button
                  onClick={handleCalculatePerson1}
                  disabled={!person1.name || !person1.birthDate}
                  className="w-full bg-purple-600 hover:bg-purple-700"
                >
                  T√≠nh s·ªë ch·ªß ƒë·∫°o
                </Button>

                {person1.lifePathNumber > 0 && (
                  <div className="text-center p-4 bg-purple-50 rounded-lg">
                    <div className="text-2xl font-bold text-purple-600 mb-2">
                      {person1.lifePathNumber}
                    </div>
                    <div className="text-sm font-medium">S·ªë Ch·ªß ƒê·∫°o</div>
                    <div className="text-xs text-muted-foreground mt-1">
                      {getNumberMeaning(person1.lifePathNumber)?.title}
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* Ng∆∞·ªùi th·ª© hai */}
            <Card>
              <CardHeader>
                <CardTitle className="text-center text-pink-600">
                  Ng∆∞·ªùi th·ª© hai
                </CardTitle>
                <CardDescription>
                  Nh·∫≠p th√¥ng tin ƒë·ªÉ t√≠nh s·ªë ch·ªß ƒë·∫°o
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="person2Name">H·ªç v√† t√™n</Label>
                  <Input
                    id="person2Name"
                    placeholder="V√≠ d·ª•: Tr·∫ßn Th·ªã B√¨nh"
                    value={person2.name}
                    onChange={(e) =>
                      setPerson2((prev) => ({ ...prev, name: e.target.value }))
                    }
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="person2BirthDate">Ng√†y sinh</Label>
                  <Input
                    id="person2BirthDate"
                    type="date"
                    value={person2.birthDate}
                    onChange={(e) =>
                      setPerson2((prev) => ({
                        ...prev,
                        birthDate: e.target.value,
                      }))
                    }
                  />
                </div>

                <Button
                  onClick={handleCalculatePerson2}
                  disabled={!person2.name || !person2.birthDate}
                  className="w-full bg-pink-600 hover:bg-pink-700"
                >
                  T√≠nh s·ªë ch·ªß ƒë·∫°o
                </Button>

                {person2.lifePathNumber > 0 && (
                  <div className="text-center p-4 bg-pink-50 rounded-lg">
                    <div className="text-2xl font-bold text-pink-600 mb-2">
                      {person2.lifePathNumber}
                    </div>
                    <div className="text-sm font-medium">S·ªë Ch·ªß ƒê·∫°o</div>
                    <div className="text-xs text-muted-foreground mt-1">
                      {getNumberMeaning(person2.lifePathNumber)?.title}
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>

          {/* N√∫t t√≠nh t∆∞∆°ng th√≠ch */}
          {person1.lifePathNumber > 0 && person2.lifePathNumber > 0 && (
            <div className="text-center">
              <Button
                onClick={handleCalculateCompatibility}
                disabled={isCalculating}
                size="lg"
                className="bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-lg px-8 py-6"
              >
                {isCalculating
                  ? "ƒêang t√≠nh to√°n..."
                  : "üîÆ Ki·ªÉm tra t∆∞∆°ng th√≠ch"}
              </Button>
            </div>
          )}

          {/* K·∫øt qu·∫£ t∆∞∆°ng th√≠ch */}
          {compatibility && (
            <Card className="bg-gradient-to-r from-purple-50 to-pink-50">
              <CardHeader className="text-center">
                <CardTitle className="text-3xl">K·∫øt qu·∫£ t∆∞∆°ng th√≠ch</CardTitle>
                <CardDescription>
                  Ph√¢n t√≠ch chi ti·∫øt v·ªÅ m·ªëi quan h·ªá gi·ªØa hai ng∆∞·ªùi
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-6">
                {/* M·ª©c ƒë·ªô t∆∞∆°ng th√≠ch ch√≠nh */}
                <div className="text-center">
                  <div
                    className={`inline-block px-6 py-3 rounded-full text-lg font-semibold ${getCompatibilityColor(
                      compatibility.level
                    )}`}
                  >
                    {getCompatibilityText(compatibility.level)}
                  </div>
                  <p className="text-muted-foreground mt-2">
                    M·ª©c ƒë·ªô t∆∞∆°ng th√≠ch:{" "}
                    {compatibility.level === "best"
                      ? "90-100%"
                      : compatibility.level === "good"
                      ? "70-89%"
                      : "50-69%"}
                  </p>
                </div>

                <div className="border-t my-4" />

                {/* Th√¥ng tin chi ti·∫øt */}
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="text-center p-4 bg-white rounded-lg">
                    <div className="text-3xl font-bold text-purple-600 mb-2">
                      {compatibility.person1Number}
                    </div>
                    <div className="text-sm font-medium">S·ªë ch·ªß ƒë·∫°o</div>
                    <div className="text-xs text-muted-foreground mt-1">
                      {getNumberMeaning(compatibility.person1Number)?.title}
                    </div>
                  </div>

                  <div className="text-center p-4 bg-white rounded-lg">
                    <div className="text-3xl font-bold text-pink-600 mb-2">
                      {compatibility.person2Number}
                    </div>
                    <div className="text-sm font-medium">S·ªë ch·ªß ƒë·∫°o</div>
                    <div className="text-xs text-muted-foreground mt-1">
                      {getNumberMeaning(compatibility.person2Number)?.title}
                    </div>
                  </div>
                </div>

                {/* Gi·∫£i th√≠ch t∆∞∆°ng th√≠ch */}
                <div className="space-y-4">
                  <h3 className="text-xl font-semibold text-center">
                    Gi·∫£i th√≠ch t∆∞∆°ng th√≠ch
                  </h3>

                  {compatibility.level === "best" && (
                    <div className="text-center p-4 bg-green-50 rounded-lg">
                      <p className="text-green-700">
                        üéâ Hai b·∫°n c√≥ s·ª± t∆∞∆°ng th√≠ch r·∫•t cao! M·ªëi quan h·ªá n√†y c√≥
                        ti·ªÅm nƒÉng ph√°t tri·ªÉn m·∫°nh m·∫Ω v√† b·ªÅn v·ªØng. H√£y t·∫≠n d·ª•ng
                        s·ª± h√≤a h·ª£p n√†y ƒë·ªÉ x√¢y d·ª±ng t∆∞∆°ng lai t·ªët ƒë·∫πp.
                      </p>
                    </div>
                  )}

                  {compatibility.level === "good" && (
                    <div className="text-center p-4 bg-blue-50 rounded-lg">
                      <p className="text-blue-700">
                        üëç Hai b·∫°n c√≥ s·ª± t∆∞∆°ng th√≠ch t·ªët. M·ªëi quan h·ªá c√≥ th·ªÉ
                        ph√°t tri·ªÉn t√≠ch c·ª±c v·ªõi s·ª± th·∫•u hi·ªÉu v√† nh∆∞·ªùng nh·ªãn l·∫´n
                        nhau. H√£y ki√™n nh·∫´n v√† h·ªçc h·ªèi t·ª´ nhau.
                      </p>
                    </div>
                  )}

                  {compatibility.level === "challenging" && (
                    <div className="text-center p-4 bg-orange-50 rounded-lg">
                      <p className="text-orange-700">
                        ‚ö†Ô∏è Hai b·∫°n c√≥ th·ªÉ g·∫∑p m·ªôt s·ªë th√°ch th·ª©c trong m·ªëi quan
                        h·ªá. Tuy nhi√™n, nh·ªØng th√°ch th·ª©c n√†y c√≥ th·ªÉ tr·ªü th√†nh c∆°
                        h·ªôi ƒë·ªÉ c·∫£ hai c√πng tr∆∞·ªüng th√†nh. H√£y giao ti·∫øp c·ªüi m·ªü v√†
                        t√¨m c√°ch th·ªèa hi·ªáp.
                      </p>
                    </div>
                  )}
                </div>

                {/* L·ªùi khuy√™n */}
                <div className="bg-white p-6 rounded-lg">
                  <h4 className="font-semibold text-lg mb-3 text-center">
                    üí° L·ªùi khuy√™n
                  </h4>
                  <ul className="space-y-2 text-sm text-muted-foreground">
                    <li>
                      ‚Ä¢ T∆∞∆°ng th√≠ch s·ªë h·ªçc ch·ªâ l√† m·ªôt ph·∫ßn, quan tr·ªçng nh·∫•t v·∫´n
                      l√† s·ª± n·ªó l·ª±c c·ªßa c·∫£ hai
                    </li>
                    <li>‚Ä¢ H√£y t√¥n tr·ªçng s·ª± kh√°c bi·ªát v√† h·ªçc h·ªèi t·ª´ nhau</li>
                    <li>
                      ‚Ä¢ Giao ti·∫øp c·ªüi m·ªü v√† ch√¢n th√†nh l√† ch√¨a kh√≥a c·ªßa m·ªçi m·ªëi
                      quan h·ªá
                    </li>
                    <li>
                      ‚Ä¢ S·ª≠ d·ª•ng hi·ªÉu bi·∫øt v·ªÅ th·∫ßn s·ªë h·ªçc ƒë·ªÉ hi·ªÉu r√µ h∆°n v·ªÅ ƒë·ªëi
                      ph∆∞∆°ng
                    </li>
                  </ul>
                </div>
              </CardContent>
            </Card>
          )}

          {/* Th√¥ng tin b·ªï sung */}
          <Card className="bg-gradient-to-r from-blue-50 to-cyan-50">
            <CardHeader>
              <CardTitle className="text-center text-blue-600">
                üìö V·ªÅ t∆∞∆°ng th√≠ch s·ªë h·ªçc
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-semibold text-blue-700 mb-2">
                    C√°ch ho·∫°t ƒë·ªông:
                  </h4>
                  <p className="text-sm text-blue-600">
                    T∆∞∆°ng th√≠ch s·ªë h·ªçc d·ª±a tr√™n vi·ªác so s√°nh s·ªë ch·ªß ƒë·∫°o c·ªßa hai
                    ng∆∞·ªùi. C√°c con s·ªë c√≥ th·ªÉ h√≤a h·ª£p, b·ªï sung ho·∫∑c t·∫°o ra th√°ch
                    th·ª©c cho nhau.
                  </p>
                </div>
                <div>
                  <h4 className="font-semibold text-blue-700 mb-2">
                    L∆∞u √Ω quan tr·ªçng:
                  </h4>
                  <p className="text-sm text-blue-600">
                    K·∫øt qu·∫£ n√†y ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o. M·ªëi quan h·ªá th·ª±c
                    t·∫ø ph·ª• thu·ªôc v√†o nhi·ªÅu y·∫øu t·ªë kh√°c nh∆∞ giao ti·∫øp, t√¨nh c·∫£m
                    v√† s·ª± n·ªó l·ª±c c·ªßa c·∫£ hai.
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
      <Footer />
    </div>
  );
}

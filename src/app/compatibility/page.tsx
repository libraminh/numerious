"use client";

import { useState } from "react";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";

import {
  calculateLifePathNumber,
  calculateCompatibility,
  calculateDetailedCompatibility,
} from "@/lib/numerology";
import { numberMeanings, compatibilityMatrix } from "@/data/numerology-data";
import Header from "@/components/layout/Header";
import Footer from "@/components/layout/Footer";

export default function CompatibilityPage() {
  const [person1, setPerson1] = useState({
    name: "",
    birthDate: "",
    lifePathNumber: 0,
  });
  const [person2, setPerson2] = useState({
    name: "",
    birthDate: "",
    lifePathNumber: 0,
  });
  const [compatibility, setCompatibility] = useState<{
    level: string;
    person1Number: number;
    person2Number: number;
    matrixInfo: {
      best: number[];
      good: number[];
      challenging: number[];
    };
    detailedInfo?: {
      percentage: number;
      title: string;
      description: string;
      strengths: string[];
      challenges: string[];
      advice: string[];
      loveCompatibility: string;
      careerCompatibility: string;
      friendshipCompatibility: string;
    };
  } | null>(null);
  const [isCalculating, setIsCalculating] = useState(false);

  const handleCalculatePerson1 = () => {
    if (!person1.name || !person1.birthDate) return;

    try {
      const date = new Date(person1.birthDate);
      const lifePathNumber = calculateLifePathNumber(date);
      setPerson1((prev) => ({ ...prev, lifePathNumber }));
    } catch (error) {
      console.error("L·ªói t√≠nh to√°n:", error);
    }
  };

  const handleCalculatePerson2 = () => {
    if (!person2.name || !person1.birthDate) return;

    try {
      const date = new Date(person2.birthDate);
      const lifePathNumber = calculateLifePathNumber(date);
      setPerson2((prev) => ({ ...prev, lifePathNumber }));
    } catch (error) {
      console.error("L·ªói t√≠nh to√°n:", error);
    }
  };

  const handleCalculateCompatibility = () => {
    if (person1.lifePathNumber === 0 || person2.lifePathNumber === 0) return;

    setIsCalculating(true);

    try {
      const compatibilityLevel = calculateCompatibility(
        person1.lifePathNumber,
        person2.lifePathNumber
      );
      const matrixInfo =
        compatibilityMatrix[
          person1.lifePathNumber as keyof typeof compatibilityMatrix
        ];

      // T√≠nh to√°n th√¥ng tin chi ti·∫øt
      const detailedInfo = calculateDetailedCompatibility(
        person1.lifePathNumber,
        person2.lifePathNumber
      );

      setCompatibility({
        level: compatibilityLevel,
        person1Number: person1.lifePathNumber,
        person2Number: person2.lifePathNumber,
        matrixInfo,
        detailedInfo,
      });
    } catch (error) {
      console.error("L·ªói t√≠nh to√°n:", error);
    } finally {
      setIsCalculating(false);
    }
  };

  const getCompatibilityText = (level: string) => {
    switch (level) {
      case "best":
        return "R·∫•t t∆∞∆°ng th√≠ch";
      case "good":
        return "T∆∞∆°ng th√≠ch t·ªët";
      case "challenging":
        return "C·∫ßn c·ªë g·∫Øng";
      default:
        return "Kh√¥ng x√°c ƒë·ªãnh";
    }
  };

  const getNumberMeaning = (number: number) => {
    return numberMeanings.find((m) => m.number === number);
  };

  return (
    <div className="min-h-screen bg-background">
      <Header />
      <main className="py-8">
        <div className="max-w-6xl mx-auto p-6 space-y-8">
          <div className="text-center space-y-4">
            <h1 className="text-4xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
              Ki·ªÉm Tra T∆∞∆°ng Th√≠ch S·ªë H·ªçc
            </h1>
            <p className="text-xl text-muted-foreground max-w-3xl mx-auto">
              Kh√°m ph√° m·ª©c ƒë·ªô t∆∞∆°ng th√≠ch gi·ªØa hai ng∆∞·ªùi d·ª±a tr√™n s·ªë ch·ªß ƒë·∫°o c·ªßa
              h·ªç. Hi·ªÉu r√µ h∆°n v·ªÅ m·ªëi quan h·ªá v√† c√°ch c·∫£i thi·ªán s·ª± h√≤a h·ª£p.
            </p>
          </div>

          <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
            {/* Ng∆∞·ªùi th·ª© nh·∫•t */}
            <Card>
              <CardHeader>
                <CardTitle className="text-center text-purple-600">
                  Ng∆∞·ªùi th·ª© nh·∫•t
                </CardTitle>
                <CardDescription>
                  Nh·∫≠p th√¥ng tin ƒë·ªÉ t√≠nh s·ªë ch·ªß ƒë·∫°o
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="person1Name">H·ªç v√† t√™n</Label>
                  <Input
                    id="person1Name"
                    placeholder="V√≠ d·ª•: Nguy·ªÖn VƒÉn An"
                    value={person1.name}
                    onChange={(e) =>
                      setPerson1((prev) => ({ ...prev, name: e.target.value }))
                    }
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="person1BirthDate">Ng√†y sinh</Label>
                  <Input
                    id="person1BirthDate"
                    type="date"
                    value={person1.birthDate}
                    onChange={(e) =>
                      setPerson1((prev) => ({
                        ...prev,
                        birthDate: e.target.value,
                      }))
                    }
                  />
                </div>

                <Button
                  onClick={handleCalculatePerson1}
                  disabled={!person1.name || !person1.birthDate}
                  className="w-full bg-purple-600 hover:bg-purple-700"
                >
                  T√≠nh s·ªë ch·ªß ƒë·∫°o
                </Button>

                {person1.lifePathNumber > 0 && (
                  <div className="text-center p-4 bg-purple-50 rounded-lg">
                    <div className="text-2xl font-bold text-purple-600 mb-2">
                      {person1.lifePathNumber}
                    </div>
                    <div className="text-sm font-medium">S·ªë Ch·ªß ƒê·∫°o</div>
                    <div className="text-xs text-muted-foreground mt-1">
                      {getNumberMeaning(person1.lifePathNumber)?.title}
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>

            {/* Ng∆∞·ªùi th·ª© hai */}
            <Card>
              <CardHeader>
                <CardTitle className="text-center text-pink-600">
                  Ng∆∞·ªùi th·ª© hai
                </CardTitle>
                <CardDescription>
                  Nh·∫≠p th√¥ng tin ƒë·ªÉ t√≠nh s·ªë ch·ªß ƒë·∫°o
                </CardDescription>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="space-y-2">
                  <Label htmlFor="person2Name">H·ªç v√† t√™n</Label>
                  <Input
                    id="person2Name"
                    placeholder="V√≠ d·ª•: Tr·∫ßn Th·ªã B√¨nh"
                    value={person2.name}
                    onChange={(e) =>
                      setPerson2((prev) => ({ ...prev, name: e.target.value }))
                    }
                  />
                </div>

                <div className="space-y-2">
                  <Label htmlFor="person2BirthDate">Ng√†y sinh</Label>
                  <Input
                    id="person2BirthDate"
                    type="date"
                    value={person2.birthDate}
                    onChange={(e) =>
                      setPerson2((prev) => ({
                        ...prev,
                        birthDate: e.target.value,
                      }))
                    }
                  />
                </div>

                <Button
                  onClick={handleCalculatePerson2}
                  disabled={!person2.name || !person2.birthDate}
                  className="w-full bg-pink-600 hover:bg-pink-700"
                >
                  T√≠nh s·ªë ch·ªß ƒë·∫°o
                </Button>

                {person2.lifePathNumber > 0 && (
                  <div className="text-center p-4 bg-pink-50 rounded-lg">
                    <div className="text-2xl font-bold text-pink-600 mb-2">
                      {person2.lifePathNumber}
                    </div>
                    <div className="text-sm font-medium">S·ªë Ch·ªß ƒê·∫°o</div>
                    <div className="text-xs text-muted-foreground mt-1">
                      {getNumberMeaning(person2.lifePathNumber)?.title}
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>

          {/* N√∫t t√≠nh t∆∞∆°ng th√≠ch */}
          {person1.lifePathNumber > 0 && person2.lifePathNumber > 0 && (
            <div className="text-center">
              <Button
                onClick={handleCalculateCompatibility}
                disabled={isCalculating}
                size="lg"
                className="bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-lg px-8 py-6"
              >
                {isCalculating
                  ? "ƒêang t√≠nh to√°n..."
                  : "üîÆ Ki·ªÉm tra t∆∞∆°ng th√≠ch"}
              </Button>
            </div>
          )}

          {/* K·∫øt qu·∫£ t∆∞∆°ng th√≠ch */}
          {compatibility && (
            <div className="space-y-6">
              {/* Header v·ªõi hi·ªáu ·ª©ng ƒë·ªông */}
              <Card className="bg-gradient-to-r from-purple-50 to-pink-50 border-2 border-purple-200">
                <CardHeader className="text-center">
                  <CardTitle className="text-4xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                    üîÆ K·∫øt Qu·∫£ T∆∞∆°ng Th√≠ch
                  </CardTitle>
                  <CardDescription className="text-lg">
                    Ph√¢n t√≠ch chi ti·∫øt v·ªÅ m·ªëi quan h·ªá gi·ªØa hai ng∆∞·ªùi
                  </CardDescription>
                </CardHeader>
              </Card>

              {/* M·ª©c ƒë·ªô t∆∞∆°ng th√≠ch ch√≠nh v·ªõi thanh ti·∫øn tr√¨nh */}
              <Card className="bg-white shadow-lg">
                <CardContent className="p-8">
                  <div className="text-center space-y-6">
                    <div className="space-y-4">
                      <h2 className="text-2xl font-bold text-gray-800">
                        {compatibility.detailedInfo?.title ||
                          `${compatibility.person1Number} & ${compatibility.person2Number}`}
                      </h2>

                      {/* Thanh ti·∫øn tr√¨nh t∆∞∆°ng th√≠ch */}
                      <div className="w-full bg-gray-200 rounded-full h-4 overflow-hidden">
                        <div
                          className={`h-full transition-all duration-1000 ease-out ${
                            compatibility.level === "best"
                              ? "bg-gradient-to-r from-green-400 to-green-600"
                              : compatibility.level === "good"
                              ? "bg-gradient-to-r from-blue-400 to-blue-600"
                              : "bg-gradient-to-r from-orange-400 to-orange-600"
                          }`}
                          style={{
                            width: `${
                              compatibility.detailedInfo?.percentage || 70
                            }%`,
                          }}
                        />
                      </div>

                      <div className="flex justify-between items-center">
                        <span className="text-sm text-gray-600">0%</span>
                        <div className="text-center">
                          <div
                            className={`text-3xl font-bold ${
                              compatibility.level === "best"
                                ? "text-green-600"
                                : compatibility.level === "good"
                                ? "text-blue-600"
                                : "text-orange-600"
                            }`}
                          >
                            {compatibility.detailedInfo?.percentage || 70}%
                          </div>
                          <div
                            className={`text-lg font-semibold ${
                              compatibility.level === "best"
                                ? "text-green-600"
                                : compatibility.level === "good"
                                ? "text-blue-600"
                                : "text-orange-600"
                            }`}
                          >
                            {getCompatibilityText(compatibility.level)}
                          </div>
                        </div>
                        <span className="text-sm text-gray-600">100%</span>
                      </div>
                    </div>

                    {/* M√¥ t·∫£ chi ti·∫øt */}
                    {compatibility.detailedInfo?.description && (
                      <p className="text-lg text-gray-700 leading-relaxed max-w-3xl mx-auto">
                        {compatibility.detailedInfo.description}
                      </p>
                    )}
                  </div>
                </CardContent>
              </Card>

              {/* Th√¥ng tin chi ti·∫øt v·ªÅ hai ng∆∞·ªùi */}
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <Card className="bg-gradient-to-br from-purple-50 to-purple-100 border-purple-200">
                  <CardContent className="p-6 text-center">
                    <div className="space-y-4">
                      <div className="w-20 h-20 mx-auto bg-purple-600 rounded-full flex items-center justify-center">
                        <span className="text-3xl font-bold text-white">
                          {compatibility.person1Number}
                        </span>
                      </div>
                      <div>
                        <h3 className="text-xl font-bold text-purple-800">
                          Ng∆∞·ªùi th·ª© nh·∫•t
                        </h3>
                        <p className="text-purple-600 font-medium">
                          {getNumberMeaning(compatibility.person1Number)?.title}
                        </p>
                        <p className="text-sm text-purple-500 mt-2">
                          {
                            getNumberMeaning(compatibility.person1Number)
                              ?.description
                          }
                        </p>
                      </div>
                    </div>
                  </CardContent>
                </Card>

                <Card className="bg-gradient-to-br from-pink-50 to-pink-100 border-pink-200">
                  <CardContent className="p-6 text-center">
                    <div className="space-y-4">
                      <div className="w-20 h-20 mx-auto bg-pink-600 rounded-full flex items-center justify-center">
                        <span className="text-3xl font-bold text-white">
                          {compatibility.person2Number}
                        </span>
                      </div>
                      <div>
                        <h3 className="text-xl font-bold text-pink-800">
                          Ng∆∞·ªùi th·ª© hai
                        </h3>
                        <p className="text-pink-600 font-medium">
                          {getNumberMeaning(compatibility.person2Number)?.title}
                        </p>
                        <p className="text-sm text-pink-500 mt-2">
                          {
                            getNumberMeaning(compatibility.person2Number)
                              ?.description
                          }
                        </p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              </div>

              {/* Ph√¢n t√≠ch chi ti·∫øt */}
              {compatibility.detailedInfo && (
                <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
                  {/* ƒêi·ªÉm m·∫°nh */}
                  <Card className="bg-gradient-to-br from-green-50 to-green-100 border-green-200">
                    <CardHeader>
                      <CardTitle className="text-green-800 flex items-center gap-2">
                        <span className="text-2xl">üí™</span>
                        ƒêi·ªÉm M·∫°nh
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ul className="space-y-3">
                        {compatibility.detailedInfo.strengths.map(
                          (strength, index) => (
                            <li key={index} className="flex items-center gap-2">
                              <span className="text-green-600 mt-1">‚úì</span>
                              <span className="text-green-700 text-sm">
                                {strength}
                              </span>
                            </li>
                          )
                        )}
                      </ul>
                    </CardContent>
                  </Card>

                  {/* Th√°ch th·ª©c */}
                  <Card className="bg-gradient-to-br from-orange-50 to-orange-100 border-orange-200">
                    <CardHeader>
                      <CardTitle className="text-orange-800 flex items-center gap-2">
                        <span className="text-2xl">‚ö†Ô∏è</span>
                        Th√°ch Th·ª©c
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ul className="space-y-3">
                        {compatibility.detailedInfo.challenges.map(
                          (challenge, index) => (
                            <li key={index} className="flex items-center gap-2">
                              <span className="text-orange-600 mt-1">!</span>
                              <span className="text-orange-700 text-sm">
                                {challenge}
                              </span>
                            </li>
                          )
                        )}
                      </ul>
                    </CardContent>
                  </Card>

                  {/* L·ªùi khuy√™n */}
                  <Card className="bg-gradient-to-br from-blue-50 to-blue-100 border-blue-200">
                    <CardHeader>
                      <CardTitle className="text-blue-800 flex items-center gap-2">
                        <span className="text-2xl">üí°</span>
                        L·ªùi Khuy√™n
                      </CardTitle>
                    </CardHeader>
                    <CardContent>
                      <ul className="space-y-3">
                        {compatibility.detailedInfo.advice.map(
                          (advice, index) => (
                            <li key={index} className="flex items-center gap-2">
                              <span className="text-blue-600 mt-1">üí°</span>
                              <span className="text-blue-700 text-sm">
                                {advice}
                              </span>
                            </li>
                          )
                        )}
                      </ul>
                    </CardContent>
                  </Card>
                </div>
              )}

              {/* T∆∞∆°ng th√≠ch theo t·ª´ng kh√≠a c·∫°nh */}
              {compatibility.detailedInfo && (
                <Card className="bg-gradient-to-r from-indigo-50 to-purple-50 border-indigo-200">
                  <CardHeader>
                    <CardTitle className="text-center text-indigo-800 text-2xl">
                      üéØ T∆∞∆°ng Th√≠ch Theo Kh√≠a C·∫°nh
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                      <div className="text-center p-4 bg-white rounded-lg shadow-sm">
                        <div className="text-3xl mb-2">üíï</div>
                        <h4 className="font-semibold text-gray-800 mb-2">
                          T√¨nh Y√™u
                        </h4>
                        <p className="text-sm text-gray-600">
                          {compatibility.detailedInfo.loveCompatibility}
                        </p>
                      </div>

                      <div className="text-center p-4 bg-white rounded-lg shadow-sm">
                        <div className="text-3xl mb-2">üíº</div>
                        <h4 className="font-semibold text-gray-800 mb-2">
                          S·ª± Nghi·ªáp
                        </h4>
                        <p className="text-sm text-gray-600">
                          {compatibility.detailedInfo.careerCompatibility}
                        </p>
                      </div>

                      <div className="text-center p-4 bg-white rounded-lg shadow-sm">
                        <div className="text-3xl mb-2">ü§ù</div>
                        <h4 className="font-semibold text-gray-800 mb-2">
                          T√¨nh B·∫°n
                        </h4>
                        <p className="text-sm text-gray-600">
                          {compatibility.detailedInfo.friendshipCompatibility}
                        </p>
                      </div>
                    </div>
                  </CardContent>
                </Card>
              )}

              {/* L∆∞u √Ω quan tr·ªçng */}
              <Card className="bg-gradient-to-r from-yellow-50 to-orange-50 border-yellow-200">
                <CardContent className="p-6">
                  <div className="text-center space-y-4">
                    <h3 className="text-xl font-bold text-yellow-800 flex items-center justify-center gap-2">
                      <span className="text-2xl">‚ö†Ô∏è</span>
                      L∆∞u √ù Quan Tr·ªçng
                    </h3>
                    <div className="max-w-4xl mx-auto space-y-3 text-yellow-700">
                      <p>
                        ‚Ä¢ T∆∞∆°ng th√≠ch s·ªë h·ªçc ch·ªâ l√† m·ªôt ph·∫ßn, quan tr·ªçng nh·∫•t
                        v·∫´n l√† s·ª± n·ªó l·ª±c c·ªßa c·∫£ hai
                      </p>
                      <p>‚Ä¢ H√£y t√¥n tr·ªçng s·ª± kh√°c bi·ªát v√† h·ªçc h·ªèi t·ª´ nhau</p>
                      <p>
                        ‚Ä¢ Giao ti·∫øp c·ªüi m·ªü v√† ch√¢n th√†nh l√† ch√¨a kh√≥a c·ªßa m·ªçi
                        m·ªëi quan h·ªá
                      </p>
                      <p>
                        ‚Ä¢ S·ª≠ d·ª•ng hi·ªÉu bi·∫øt v·ªÅ th·∫ßn s·ªë h·ªçc ƒë·ªÉ hi·ªÉu r√µ h∆°n v·ªÅ ƒë·ªëi
                        ph∆∞∆°ng
                      </p>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          )}

          {/* Th√¥ng tin b·ªï sung */}
          <Card className="bg-gradient-to-r from-blue-50 to-cyan-50">
            <CardHeader>
              <CardTitle className="text-center text-blue-600">
                üìö V·ªÅ t∆∞∆°ng th√≠ch s·ªë h·ªçc
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-semibold text-blue-700 mb-2">
                    C√°ch ho·∫°t ƒë·ªông:
                  </h4>
                  <p className="text-sm text-blue-600">
                    T∆∞∆°ng th√≠ch s·ªë h·ªçc d·ª±a tr√™n vi·ªác so s√°nh s·ªë ch·ªß ƒë·∫°o c·ªßa hai
                    ng∆∞·ªùi. C√°c con s·ªë c√≥ th·ªÉ h√≤a h·ª£p, b·ªï sung ho·∫∑c t·∫°o ra th√°ch
                    th·ª©c cho nhau.
                  </p>
                </div>
                <div>
                  <h4 className="font-semibold text-blue-700 mb-2">
                    L∆∞u √Ω quan tr·ªçng:
                  </h4>
                  <p className="text-sm text-blue-600">
                    K·∫øt qu·∫£ n√†y ch·ªâ mang t√≠nh ch·∫•t tham kh·∫£o. M·ªëi quan h·ªá th·ª±c
                    t·∫ø ph·ª• thu·ªôc v√†o nhi·ªÅu y·∫øu t·ªë kh√°c nh∆∞ giao ti·∫øp, t√¨nh c·∫£m
                    v√† s·ª± n·ªó l·ª±c c·ªßa c·∫£ hai.
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>
      </main>
      <Footer />
    </div>
  );
}

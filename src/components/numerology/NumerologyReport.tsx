"use client";

import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";

import { Button } from "@/components/ui/button";
import { NumerologyResult, NameAnalysis } from "@/lib/numerology";
import { numberMeanings, masterNumbers } from "@/data/numerology-data";
import {
  getBlogPostUrlForNumber,
  hasBlogPostForNumber,
} from "@/lib/blog-utils";
import { useState } from "react";
import Link from "next/link";

interface NumerologyReportProps {
  fullName: string;
  birthDate: string;
  results: NumerologyResult;
  nameAnalysis: NameAnalysis;
}

export default function NumerologyReport({
  fullName,
  birthDate,
  results,
  nameAnalysis,
}: NumerologyReportProps) {
  const getNumberMeaning = (number: number) => {
    const meaning = numberMeanings.find((m) => m.number === number);
    const masterMeaning = masterNumbers.find((m) => m.number === number);
    return masterMeaning || meaning;
  };

  const formatDate = (dateString: string) => {
    const date = new Date(dateString);
    return date.toLocaleDateString("vi-VN", {
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
    });
  };

  const getPersonalityInsights = () => {
    const lifePathMeaning = getNumberMeaning(results.lifePathNumber);
    const soulMeaning = getNumberMeaning(results.soulNumber);
    const expressionMeaning = getNumberMeaning(results.expressionNumber);

    return {
      lifePathMeaning,
      soulMeaning,
      expressionMeaning,
    };
  };

  const { lifePathMeaning, soulMeaning, expressionMeaning } =
    getPersonalityInsights();

  const [copied, setCopied] = useState(false);

  const generateShareableLink = () => {
    const params = new URLSearchParams({
      name: fullName,
      birthDate: birthDate,
      lifePathNumber: results.lifePathNumber.toString(),
      soulNumber: results.soulNumber.toString(),
      expressionNumber: results.expressionNumber.toString(),
      birthdayNumber: results.birthdayNumber.toString(),
      attitudeNumber: results.attitudeNumber.toString(),
      personalYearNumber: results.personalYearNumber.toString(),
      isMasterNumber: results.isMasterNumber.toString(),
      personalityNumber: nameAnalysis.personalityNumber.toString(),
      hiddenPassionNumber: nameAnalysis.hiddenPassionNumber.toString(),
      karmicLessons: nameAnalysis.karmicLessons.join(","),
    });

    return `${window.location.origin}/report?${params.toString()}`;
  };

  const handleShare = async () => {
    const shareUrl = generateShareableLink();

    try {
      await navigator.clipboard.writeText(shareUrl);
      setCopied(true);
      setTimeout(() => setCopied(false), 2000);
    } catch (err) {
      console.error("Kh√¥ng th·ªÉ copy link:", err);
    }
  };

  const handlePrint = () => {
    window.print();
  };

  return (
    <div className="max-w-6xl mx-auto p-6 space-y-8">
      {/* Header c·ªßa b√°o c√°o */}
      <Card className="bg-gradient-to-r from-purple-50 via-pink-50 to-blue-50 border-0 shadow-lg">
        <CardHeader className="text-center pb-8">
          <div className="space-y-4">
            <div className="w-24 h-24 mx-auto bg-gradient-to-r from-purple-600 to-pink-600 rounded-full flex items-center justify-center">
              <span className="text-4xl text-white">‚ú®</span>
            </div>
            <div>
              <CardTitle className="text-4xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent mb-2">
                B√°o C√°o Th·∫ßn S·ªë H·ªçc
              </CardTitle>
              <CardDescription className="text-xl font-medium text-gray-700">
                Kh√°m ph√° b√≠ ·∫©n s·ªë h·ªçc c·ªßa {fullName}
              </CardDescription>
              <p className="text-sm text-gray-500 mt-2">
                Ng√†y sinh: {formatDate(birthDate)} | Ng√†y t·∫°o b√°o c√°o:{" "}
                {formatDate(new Date().toISOString().split("T")[0])}
              </p>
            </div>
          </div>
        </CardHeader>
      </Card>

      {/* N√∫t chia s·∫ª v√† in */}
      <Card className="bg-gradient-to-r from-gray-50 to-gray-100 border-gray-200">
        <CardContent className="py-6">
          <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
            <Button
              onClick={handleShare}
              variant="outline"
              className="flex items-center gap-2 px-6 py-3"
            >
              {copied ? (
                <>
                  <span className="text-green-500">‚úì</span>
                  ƒê√£ copy link!
                </>
              ) : (
                <>
                  <span>üîó</span>
                  Chia s·∫ª b√°o c√°o
                </>
              )}
            </Button>

            <Button
              onClick={handlePrint}
              variant="outline"
              className="flex items-center gap-2 px-6 py-3"
            >
              <span>üñ®Ô∏è</span>
              In b√°o c√°o
            </Button>
          </div>
          <p className="text-center text-sm text-gray-500 mt-3">
            Chia s·∫ª b√°o c√°o n√†y v·ªõi b·∫°n b√® ho·∫∑c in ra ƒë·ªÉ l∆∞u tr·ªØ
          </p>
        </CardContent>
      </Card>

      {/* T√≥m t·∫Øt con s·ªë ch√≠nh */}
      <Card>
        <CardHeader>
          <CardTitle className="text-2xl">
            üìä T√≥m T·∫Øt C√°c Con S·ªë Ch√≠nh
          </CardTitle>
          <CardDescription>
            D∆∞·ªõi ƒë√¢y l√† c√°c con s·ªë quan tr·ªçng nh·∫•t trong th·∫ßn s·ªë h·ªçc c·ªßa b·∫°n
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="text-center p-6 bg-gradient-to-br from-purple-100 to-pink-100 rounded-lg">
              <div className="text-4xl font-bold text-purple-600 mb-3">
                {results.lifePathNumber}
              </div>
              <h3 className="font-semibold text-purple-700 mb-2">S·ªë Ch·ªß ƒê·∫°o</h3>
              <p className="text-sm text-gray-600">
                ƒê·ªãnh h∆∞·ªõng cu·ªôc s·ªëng v√† s·ª© m·ªánh
              </p>
              {results.isMasterNumber && (
                <Badge variant="destructive" className="mt-2">
                  Master Number
                </Badge>
              )}
            </div>

            <div className="text-center p-6 bg-gradient-to-br from-blue-100 to-cyan-100 rounded-lg">
              <div className="text-4xl font-bold text-blue-600 mb-3">
                {results.soulNumber}
              </div>
              <h3 className="font-semibold text-blue-700 mb-2">S·ªë Linh H·ªìn</h3>
              <p className="text-sm text-gray-600">
                Mong mu·ªën s√¢u th·∫≥m trong t√¢m h·ªìn
              </p>
            </div>

            <div className="text-center p-6 bg-gradient-to-br from-green-100 to-emerald-100 rounded-lg">
              <div className="text-4xl font-bold text-green-600 mb-3">
                {results.expressionNumber}
              </div>
              <h3 className="font-semibold text-green-700 mb-2">S·ªë Bi·ªÉu ƒê·∫°t</h3>
              <p className="text-sm text-gray-600">
                T√†i nƒÉng v√† kh·∫£ nƒÉng b·∫©m sinh
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Ph√¢n t√≠ch t√≠nh c√°ch t·ªïng quan */}
      <Card>
        <CardHeader>
          <CardTitle className="text-2xl">
            üé≠ Ph√¢n T√≠ch T√≠nh C√°ch T·ªïng Quan
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="prose max-w-none">
            <p className="text-lg leading-relaxed text-gray-700">
              Ch√†o <strong>{fullName}</strong>! D·ª±a tr√™n ng√†y sinh{" "}
              <strong>{formatDate(birthDate)}</strong> v√† t√™n c·ªßa b·∫°n, ch√∫ng t√¥i
              ƒë√£ ph√¢n t√≠ch c√°c con s·ªë trong th·∫ßn s·ªë h·ªçc ƒë·ªÉ t·∫°o ra b·ª©c tranh t·ªïng
              th·ªÉ v·ªÅ t√≠nh c√°ch v√† ti·ªÅm nƒÉng c·ªßa b·∫°n.
            </p>

            <div className="bg-blue-50 p-6 rounded-lg mt-6">
              <h3 className="text-xl font-semibold text-blue-700 mb-3">
                üåü Con Ng∆∞·ªùi C·ªßa B·∫°n Qua G√≥c Nh√¨n Th·∫ßn S·ªë H·ªçc
              </h3>
              <p className="text-gray-700 leading-relaxed">
                V·ªõi <strong>s·ªë ch·ªß ƒë·∫°o {results.lifePathNumber}</strong>, b·∫°n l√†
                m·ªôt ng∆∞·ªùi {lifePathMeaning?.description?.toLowerCase()}. S·ªë linh
                h·ªìn {results.soulNumber} cho th·∫•y trong t√¢m h·ªìn, b·∫°n khao kh√°t{" "}
                {soulMeaning?.keywords.join(", ").toLowerCase()}. C√≤n s·ªë bi·ªÉu
                ƒë·∫°t {results.expressionNumber} ti·∫øt l·ªô r·∫±ng b·∫°n c√≥ kh·∫£ nƒÉng t·ª±
                nhi√™n v·ªÅ {expressionMeaning?.keywords.join(", ").toLowerCase()}.
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* S·ªë ch·ªß ƒë·∫°o - Ph√¢n t√≠ch chi ti·∫øt */}
      <Card>
        <CardHeader>
          <CardTitle className="text-2xl flex items-center gap-3">
            <span className="text-3xl">{results.lifePathNumber}</span>
            S·ªë Ch·ªß ƒê·∫°o - H√†nh Tr√¨nh Cu·ªôc S·ªëng
          </CardTitle>
          <CardDescription className="text-lg">
            {lifePathMeaning?.title}
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="prose max-w-none">
            <p className="text-lg leading-relaxed">
              {lifePathMeaning?.description}
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="space-y-4">
              <h3 className="text-xl font-semibold text-green-600">
                üí™ ƒêi·ªÉm M·∫°nh C·ªßa B·∫°n
              </h3>
              <ul className="space-y-3">
                {lifePathMeaning?.strengths.map((strength, index) => (
                  <li
                    key={index}
                    className="flex items-center gap-3 p-3 bg-green-50 rounded-lg"
                  >
                    <span className="text-green-500 text-lg mt-0.5">‚úì</span>
                    <span className="text-gray-700">{strength}</span>
                  </li>
                ))}
              </ul>
            </div>

            <div className="space-y-4">
              <h3 className="text-xl font-semibold text-orange-600">
                ‚ö° Th√°ch Th·ª©c C·∫ßn V∆∞·ª£t Qua
              </h3>
              <ul className="space-y-3">
                {lifePathMeaning?.challenges.map((challenge, index) => (
                  <li
                    key={index}
                    className="flex items-start gap-3 p-3 bg-orange-50 rounded-lg"
                  >
                    <span className="text-orange-500 text-lg mt-0.5">‚ö†</span>
                    <span className="text-gray-700">{challenge}</span>
                  </li>
                ))}
              </ul>
            </div>
          </div>

          {/* Link ƒë·∫øn b√†i vi·∫øt blog chi ti·∫øt */}
          {hasBlogPostForNumber(results.lifePathNumber) && (
            <div className="text-center pt-4 border-t">
              <Link href={getBlogPostUrlForNumber(results.lifePathNumber)!}>
                <Button
                  variant="outline"
                  className="bg-gradient-to-r from-blue-50 to-cyan-50 hover:from-blue-100 hover:to-cyan-100 border-blue-200 text-blue-700"
                >
                  üìñ ƒê·ªçc b√†i vi·∫øt chi ti·∫øt v·ªÅ S·ªë Ch·ªß ƒê·∫°o{" "}
                  {results.lifePathNumber}
                </Button>
              </Link>
            </div>
          )}
        </CardContent>
      </Card>

      {/* S·ªë linh h·ªìn v√† s·ªë bi·ªÉu ƒë·∫°t */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* S·ªë linh h·ªìn */}
        <Card>
          <CardHeader>
            <CardTitle className="text-xl flex items-center gap-3">
              <span className="text-2xl">{results.soulNumber}</span>
              S·ªë Linh H·ªìn - Khao Kh√°t T√¢m H·ªìn
            </CardTitle>
            <CardDescription>{soulMeaning?.title}</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <p className="text-gray-700 leading-relaxed">
              S·ªë linh h·ªìn ti·∫øt l·ªô nh·ªØng mong mu·ªën s√¢u k√≠n nh·∫•t trong t√¢m h·ªìn
              b·∫°n.
              {soulMeaning?.description}
            </p>

            <div>
              <h4 className="font-semibold mb-2 text-pink-600">
                üíñ Trong T√¨nh Y√™u
              </h4>
              <div className="flex flex-wrap gap-2">
                {soulMeaning?.love.map((love, index) => (
                  <Badge
                    key={index}
                    variant="outline"
                    className="text-pink-600 border-pink-300"
                  >
                    {love}
                  </Badge>
                ))}
              </div>
            </div>

            {/* Link ƒë·∫øn b√†i vi·∫øt blog chi ti·∫øt */}
            {hasBlogPostForNumber(results.soulNumber) && (
              <div className="text-center pt-4 border-t">
                <Link href={getBlogPostUrlForNumber(results.soulNumber)!}>
                  <Button
                    variant="outline"
                    className="bg-gradient-to-r from-pink-50 to-rose-50 hover:from-pink-100 hover:to-rose-100 border-pink-200 text-pink-700"
                  >
                    üìñ ƒê·ªçc b√†i vi·∫øt v·ªÅ S·ªë Linh H·ªìn {results.soulNumber}
                  </Button>
                </Link>
              </div>
            )}
          </CardContent>
        </Card>

        {/* S·ªë bi·ªÉu ƒë·∫°t */}
        <Card>
          <CardHeader>
            <CardTitle className="text-xl flex items-center gap-3">
              <span className="text-2xl">{results.expressionNumber}</span>
              S·ªë Bi·ªÉu ƒê·∫°t - T√†i NƒÉng B·∫©m Sinh
            </CardTitle>
            <CardDescription>{expressionMeaning?.title}</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <p className="text-gray-700 leading-relaxed">
              S·ªë bi·ªÉu ƒë·∫°t cho th·∫•y nh·ªØng t√†i nƒÉng v√† kh·∫£ nƒÉng t·ª± nhi√™n m√† b·∫°n
              mang trong m√¨nh.
              {expressionMeaning?.description}
            </p>

            <div>
              <h4 className="font-semibold mb-2 text-blue-600">
                üíº Ngh·ªÅ Nghi·ªáp Ph√π H·ª£p
              </h4>
              <div className="flex flex-wrap gap-2">
                {expressionMeaning?.career.map((career, index) => (
                  <Badge
                    key={index}
                    variant="outline"
                    className="text-blue-600 border-blue-300"
                  >
                    {career}
                  </Badge>
                ))}
              </div>
            </div>

            {/* Link ƒë·∫øn b√†i vi·∫øt blog chi ti·∫øt */}
            {hasBlogPostForNumber(results.expressionNumber) && (
              <div className="text-center pt-4 border-t">
                <Link href={getBlogPostUrlForNumber(results.expressionNumber)!}>
                  <Button
                    variant="outline"
                    className="bg-gradient-to-r from-blue-50 to-cyan-50 hover:from-blue-100 hover:to-cyan-100 border-blue-200 text-blue-700"
                  >
                    üìñ ƒê·ªçc b√†i vi·∫øt v·ªÅ S·ªë Bi·ªÉu ƒê·∫°t {results.expressionNumber}
                  </Button>
                </Link>
              </div>
            )}
          </CardContent>
        </Card>
      </div>

      {/* Ph√¢n t√≠ch t√™n */}
      <Card>
        <CardHeader>
          <CardTitle className="text-2xl">
            üè∑Ô∏è Ph√¢n T√≠ch T√™n: &quot;{nameAnalysis.name}&quot;
          </CardTitle>
          <CardDescription>
            Kh√°m ph√° nh·ªØng b√≠ ·∫©n ·∫©n gi·∫•u trong t√™n c·ªßa b·∫°n
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div className="text-center p-4 bg-purple-50 rounded-lg">
              <div className="text-2xl font-bold text-purple-600 mb-2">
                {nameAnalysis.soulNumber}
              </div>
              <div className="text-sm font-medium">S·ªë Linh H·ªìn</div>
            </div>

            <div className="text-center p-4 bg-blue-50 rounded-lg">
              <div className="text-2xl font-bold text-blue-600 mb-2">
                {nameAnalysis.expressionNumber}
              </div>
              <div className="text-sm font-medium">S·ªë Bi·ªÉu ƒê·∫°t</div>
            </div>

            <div className="text-center p-4 bg-green-50 rounded-lg">
              <div className="text-2xl font-bold text-green-600 mb-2">
                {nameAnalysis.personalityNumber}
              </div>
              <div className="text-sm font-medium">S·ªë Nh√¢n C√°ch</div>
            </div>

            <div className="text-center p-4 bg-orange-50 rounded-lg">
              <div className="text-2xl font-bold text-orange-600 mb-2">
                {nameAnalysis.hiddenPassionNumber}
              </div>
              <div className="text-sm font-medium">S·ªë ƒêam M√™ ·∫®n</div>
            </div>
          </div>

          {nameAnalysis.karmicLessons.length > 0 && (
            <div className="bg-yellow-50 p-6 rounded-lg">
              <h3 className="text-xl font-semibold text-yellow-700 mb-3">
                üéØ B√†i H·ªçc Karmic - Nh·ªØng Con S·ªë Thi·∫øu
              </h3>
              <p className="text-gray-700 mb-3">
                Nh·ªØng con s·ªë sau ƒë√¢y kh√¥ng xu·∫•t hi·ªán trong t√™n c·ªßa b·∫°n, ƒë·∫°i di·ªán
                cho nh·ªØng b√†i h·ªçc m√† cu·ªôc s·ªëng mu·ªën b·∫°n h·ªçc h·ªèi:
              </p>
              <div className="flex flex-wrap gap-2">
                {nameAnalysis.karmicLessons.map((number, index) => (
                  <Badge key={index} variant="destructive" className="text-sm">
                    S·ªë {number}
                  </Badge>
                ))}
              </div>
            </div>
          )}
        </CardContent>
      </Card>

      {/* C√°c con s·ªë ph·ª• */}
      <Card>
        <CardHeader>
          <CardTitle className="text-2xl">
            üî¢ C√°c Con S·ªë Ph·ª• Trong Cu·ªôc S·ªëng
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="text-center p-6 bg-gray-50 rounded-lg">
              <div className="text-3xl font-bold text-gray-600 mb-3">
                {results.birthdayNumber}
              </div>
              <h3 className="font-semibold text-gray-700 mb-2">S·ªë Sinh Nh·∫≠t</h3>
              <p className="text-sm text-gray-600">
                T√†i nƒÉng ƒë·∫∑c bi·ªát t·ª´ ng√†y sinh
              </p>
            </div>

            <div className="text-center p-6 bg-orange-50 rounded-lg">
              <div className="text-3xl font-bold text-orange-600 mb-3">
                {results.attitudeNumber}
              </div>
              <h3 className="font-semibold text-orange-700 mb-2">S·ªë Th√°i ƒê·ªô</h3>
              <p className="text-sm text-gray-600">
                C√°ch b·∫°n ti·∫øp c·∫≠n cu·ªôc s·ªëng
              </p>
            </div>

            <div className="text-center p-6 bg-indigo-50 rounded-lg">
              <div className="text-3xl font-bold text-indigo-600 mb-3">
                {results.personalYearNumber}
              </div>
              <h3 className="font-semibold text-indigo-700 mb-2">
                S·ªë NƒÉm C√° Nh√¢n
              </h3>
              <p className="text-sm text-gray-600">
                Ch·ªß ƒë·ªÅ c·ªßa nƒÉm {new Date().getFullYear()}
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* L·ªùi khuy√™n t·ªïng h·ª£p */}
      <Card className="bg-gradient-to-r from-green-50 to-emerald-50">
        <CardHeader>
          <CardTitle className="text-2xl text-green-700">
            üåü L·ªùi Khuy√™n T·ªïng H·ª£p
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="prose max-w-none">
            <p className="text-lg leading-relaxed text-gray-700">
              <strong>{fullName}</strong>, b√°o c√°o th·∫ßn s·ªë h·ªçc n√†y l√† m·ªôt b·ª©c
              tranh t·ªïng th·ªÉ v·ªÅ con ng∆∞·ªùi b·∫°n qua g√≥c nh√¨n c·ªßa c√°c con s·ªë. H√£y
              nh·ªõ r·∫±ng:
            </p>

            <ul className="space-y-3 text-gray-700">
              <li className="flex items-start gap-3">
                <span className="text-green-500 text-lg">üéØ</span>
                <span>
                  S·ª≠ d·ª•ng nh·ªØng ƒëi·ªÉm m·∫°nh t·ª´ s·ªë ch·ªß ƒë·∫°o {results.lifePathNumber}{" "}
                  ƒë·ªÉ ph√°t tri·ªÉn b·∫£n th√¢n
                </span>
              </li>
              <li className="flex items-start gap-3">
                <span className="text-blue-500 text-lg">üíñ</span>
                <span>
                  L·∫Øng nghe ti·∫øng g·ªçi c·ªßa s·ªë linh h·ªìn {results.soulNumber} ƒë·ªÉ
                  t√¨m th·∫•y h·∫°nh ph√∫c ƒë√≠ch th·ª±c
                </span>
              </li>
              <li className="flex items-start gap-3">
                <span className="text-purple-500 text-lg">‚ú®</span>
                <span>
                  Ph√°t huy t√†i nƒÉng t·ª´ s·ªë bi·ªÉu ƒë·∫°t {results.expressionNumber}{" "}
                  trong c√¥ng vi·ªác v√† s√°ng t·∫°o
                </span>
              </li>
              <li className="flex items-start gap-3">
                <span className="text-orange-500 text-lg">‚ö°</span>
                <span>
                  Ch·∫•p nh·∫≠n v√† v∆∞·ª£t qua nh·ªØng th√°ch th·ª©c ƒë·ªÉ tr∆∞·ªüng th√†nh h∆°n
                </span>
              </li>
            </ul>

            <div className="bg-white p-6 rounded-lg mt-6 border-l-4 border-green-500">
              <p className="text-lg font-medium text-green-700 mb-2">
                Nh·ªõ r·∫±ng th·∫ßn s·ªë h·ªçc ch·ªâ l√† m·ªôt c√¥ng c·ª• h·ªó tr·ª£!
              </p>
              <p className="text-gray-700">
                Cu·ªôc s·ªëng c·ªßa b·∫°n ƒë∆∞·ª£c ƒë·ªãnh h√¨nh b·ªüi nh·ªØng l·ª±a ch·ªçn, n·ªó l·ª±c v√†
                c√°ch b·∫°n ƒë·ªëi m·∫∑t v·ªõi th·ª≠ th√°ch. H√£y s·ª≠ d·ª•ng nh·ªØng hi·ªÉu bi·∫øt n√†y
                nh∆∞ m·ªôt la b√†n ƒë·ªÉ ƒë·ªãnh h∆∞·ªõng, kh√¥ng ph·∫£i nh∆∞ m·ªôt quy lu·∫≠t c·ª©ng
                nh·∫Øc.
              </p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Footer */}
      <Card className="bg-gradient-to-r from-purple-50 to-pink-50 border-0">
        <CardContent className="text-center py-8">
          <p className="text-gray-600 mb-4">
            B√°o c√°o n√†y ƒë∆∞·ª£c t·∫°o b·ªüi Numerious - Website th·∫ßn s·ªë h·ªçc Vi·ªát Nam
          </p>
          <p className="text-sm text-gray-500">
            Ng√†y t·∫°o: {formatDate(new Date().toISOString().split("T")[0])} |
            Phi√™n b·∫£n: 1.0 | ¬© 2024 Numerious.vn
          </p>
        </CardContent>
      </Card>
    </div>
  );
}
